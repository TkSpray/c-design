[{"/Users/xlt/txl/c-design/src/components/loginForm/index.jsx":"1","/Users/xlt/txl/c-design/src/pages/home/release/index.jsx":"2","/Users/xlt/txl/c-design/src/pages/home/index.jsx":"3","/Users/xlt/txl/c-design/src/pages/home/usermanage/index.jsx":"4","/Users/xlt/txl/c-design/src/axios/index.jsx":"5","/Users/xlt/txl/c-design/src/pages/home/overview/index.jsx":"6","/Users/xlt/txl/c-design/src/pages/home/welcome/index.jsx":"7","/Users/xlt/txl/c-design/src/routes/index.jsx":"8","/Users/xlt/txl/c-design/src/index.js":"9","/Users/xlt/txl/c-design/src/pages/login/index.jsx":"10","/Users/xlt/txl/c-design/src/components/footer/index.jsx":"11","/Users/xlt/txl/c-design/src/components/ShowStatus/index.jsx":"12","/Users/xlt/txl/c-design/src/mock/login.js":"13","/Users/xlt/txl/c-design/src/mock/release.js":"14","/Users/xlt/txl/c-design/src/mock/mock.js":"15","/Users/xlt/txl/c-design/src/mock/usermanage.js":"16","/Users/xlt/txl/c-design/src/apis/usermanage.js":"17","/Users/xlt/txl/c-design/src/mock/overview.js":"18","/Users/xlt/txl/c-design/src/components/LoginForm/index.jsx":"19","/Users/xlt/txl/c-design/src/mock/index.js":"20","/Users/xlt/txl/c-design/src/apis/overview.js":"21","/Users/xlt/txl/c-design/src/mock/home.js":"22","/Users/xlt/txl/c-design/src/apis/home.js":"23","/Users/xlt/txl/c-design/src/apis/login.js":"24","/Users/xlt/txl/c-design/src/apis/release.js":"25"},{"size":2173,"mtime":1607589048818,"results":"26","hashOfConfig":"27"},{"size":7109,"mtime":1609397547670,"results":"28","hashOfConfig":"27"},{"size":5758,"mtime":1608779551926,"results":"29","hashOfConfig":"27"},{"size":7049,"mtime":1608779875227,"results":"30","hashOfConfig":"27"},{"size":972,"mtime":1609391415624,"results":"31","hashOfConfig":"27"},{"size":6353,"mtime":1608779861856,"results":"32","hashOfConfig":"27"},{"size":11366,"mtime":1609382166376,"results":"33","hashOfConfig":"27"},{"size":1018,"mtime":1608347202586,"results":"34","hashOfConfig":"27"},{"size":1391,"mtime":1609382685011,"results":"35","hashOfConfig":"27"},{"size":513,"mtime":1608626031176,"results":"36","hashOfConfig":"27"},{"size":800,"mtime":1607581459777,"results":"37","hashOfConfig":"27"},{"size":1468,"mtime":1608707287755,"results":"38","hashOfConfig":"27"},{"size":295,"mtime":1609382669498,"results":"39","hashOfConfig":"27"},{"size":136,"mtime":1608790319627,"results":"40","hashOfConfig":"27"},{"size":82,"mtime":1608710027908,"results":"41","hashOfConfig":"27"},{"size":1801,"mtime":1608790412144,"results":"42","hashOfConfig":"27"},{"size":419,"mtime":1609388524752,"results":"43","hashOfConfig":"27"},{"size":3329,"mtime":1608790276748,"results":"44","hashOfConfig":"27"},{"size":2200,"mtime":1609381682414,"results":"45","hashOfConfig":"27"},{"size":238,"mtime":1608690077030,"results":"46","hashOfConfig":"27"},{"size":273,"mtime":1609384235293,"results":"47","hashOfConfig":"27"},{"size":4315,"mtime":1608794642038,"results":"48","hashOfConfig":"27"},{"size":468,"mtime":1609388511887,"results":"49","hashOfConfig":"27"},{"size":152,"mtime":1609385974148,"results":"50","hashOfConfig":"27"},{"size":175,"mtime":1609388388632,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1cmruog",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/xlt/txl/c-design/src/components/loginForm/index.jsx",[],["112","113"],"/Users/xlt/txl/c-design/src/pages/home/release/index.jsx",["114"],"/Users/xlt/txl/c-design/src/pages/home/index.jsx",[],["115","116"],"/Users/xlt/txl/c-design/src/pages/home/usermanage/index.jsx",["117","118","119","120"],"import React, { useState, useEffect } from 'react'\nimport { Table, Tag, Space, Button, Modal, Form, Input, Switch, message, Popconfirm } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\nimport './index.scss'\nimport { GetUser, UserControl, DeleteUser } from '../../../apis/usermanage'\n\nconst UserManage = props => {\n    const [isModalVisible, setIsModalVisible] = useState(false)\n    const [form] = Form.useForm()\n    const [userlist, setUserlist] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    const layout = {\n        labelCol: { span: 5 },\n        wrapperCol: { span: 16 }\n    }\n\n    useEffect(() => {\n        getForm()\n    }, [])\n\n    const getForm = async () => {\n        try {\n            const res = await GetUser()\n            if (res.code === 0) {\n                console.log(res)\n                setUserlist(res.data.userlist)\n                setLoading(false)\n            } else {\n                message.error('获取用户列表失败')\n            }\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const showModal = () => {\n        setIsModalVisible(true)\n    }\n\n    const handleOk = async () => {\n        try {\n            const values = await form.validateFields()\n            let editflag = values.uid ? true : false\n            !editflag && delete values.uid\n            message.loading({ content: '保存中', key: 'Ok' })\n            const res = await UserControl(values, editflag)\n            if (res.code === 0) {\n                await getForm()\n                message.success({ content: '保存成功', key: 'Ok' })\n                setIsModalVisible(false)\n            } else {\n                message.error({ content: res.msg || '保存失败', key: 'Ok' })\n            }\n        } catch (e) {\n            message.error({ content: '保存失败', key: 'Ok' })\n        }\n    }\n\n    const handleCancel = () => {\n        setIsModalVisible(false)\n    }\n\n    const confirmDelete = async uid => {\n        message.loading({ content: '删除中', key: 'Delete' })\n        try {\n            const res = await DeleteUser({ uid })\n            if (res.code === 0) {\n                await getForm()\n                message.success({ content: '删除成功', key: 'Delete' })\n            } else {\n                message.error({ content: res.msg || '删除失败', key: 'Delete' })\n            }\n        } catch (e) {\n            message.error({ content: '删除失败', key: 'Delete' })\n        }\n    }\n\n    const editInfo = record => {\n        form.setFieldsValue(record)\n        setIsModalVisible(true)\n    }\n    const columns = [\n        {\n            title: '姓名',\n            dataIndex: 'name',\n            key: 'name'\n        },\n        {\n            title: '手机号',\n            dataIndex: 'tel',\n            key: 'tel'\n        },\n        {\n            title: '邮箱',\n            dataIndex: 'mail',\n            key: 'mail'\n        },\n        {\n            title: '角色',\n            key: 'role',\n            dataIndex: 'role',\n            render: tag => (\n                <>\n                    {\n                        <Tag color={tag ? 'geekblue' : 'green'} key={tag}>\n                            {tag ? '管理员' : '教师'}\n                        </Tag>\n                    }\n                </>\n            )\n        },\n        {\n            title: '操作',\n            key: 'action',\n\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    <Button type=\"primary\" onClick={() => editInfo(record)}>\n                        编辑\n                    </Button>\n                    <Popconfirm\n                        title=\"确认删除?\"\n                        onConfirm={() => confirmDelete(record.uid)}\n                        okText=\"确认\"\n                        cancelText=\"取消\"\n                    >\n                        <Button type=\"primary\" danger>\n                            删除\n                        </Button>\n                    </Popconfirm>\n                </Space>\n            )\n        }\n    ]\n\n    return (\n        <div className=\"content-wrapper\">\n            <div className=\"content-header\">\n                <span className=\"content-title\">用户列表</span>\n                <Button type=\"primary\" icon={<PlusOutlined />} onClick={showModal}>\n                    添加用户\n                </Button>\n            </div>\n\n            <Table columns={columns} dataSource={userlist} loading={loading} />\n            <Modal\n                title=\"用户信息\"\n                visible={isModalVisible}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                centered\n                okText=\"确认\"\n                cancelText=\"取消\"\n                destroyOnClose\n            >\n                <Form\n                    {...layout}\n                    form={form}\n                    validateMessages={{\n                        required: '${label}不能为空'\n                    }}\n                    preserve={false}\n                >\n                    <Form.Item name=\"uid\" hidden></Form.Item>\n                    <Form.Item\n                        name=\"name\"\n                        label=\"姓名\"\n                        rules={[\n                            {\n                                required: true\n                            }\n                        ]}\n                    >\n                        <Input placeholder=\"请输入姓名\" />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"tel\"\n                        label=\"手机号\"\n                        rules={[\n                            {\n                                required: true,\n                                pattern: /^1[3-9]\\d{9}$/,\n                                message: '请输入正确的手机号'\n                            }\n                        ]}\n                    >\n                        <Input placeholder=\"请输入手机号\" />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"mail\"\n                        label=\"邮箱\"\n                        rules={[\n                            {\n                                required: true,\n                                pattern: /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/,\n                                message: '请输入正确的邮箱地址'\n                            }\n                        ]}\n                    >\n                        <Input placeholder=\"请输入邮箱地址\" />\n                    </Form.Item>\n                    <Form.Item name=\"password\" label=\"密码\" rules={[{ required: true }]}>\n                        <Input placeholder=\"请输入账户密码\" />\n                    </Form.Item>\n                    <Form.Item name=\"role\" label=\"管理员权限\" initialValue={false}>\n                        <Switch />\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </div>\n    )\n}\n\nexport default UserManage\n",["121","122"],"/Users/xlt/txl/c-design/src/axios/index.jsx",[],"/Users/xlt/txl/c-design/src/pages/home/overview/index.jsx",["123"],"import React, { useEffect, useState } from 'react'\nimport { Table, Tag, Space, Button, message, Popconfirm, Drawer, Divider, Descriptions } from 'antd'\nimport { useHistory } from 'react-router-dom'\nimport './index.scss'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { GetTopic, DeleteTopic } from '../../../apis/overview'\nconst Overview = props => {\n    const [drawerShow, setShow] = useState(false)\n    const [detail, setDetail] = useState({})\n    const history = useHistory()\n    const [topiclist, setTopiclist] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        getTopicList()\n    }, [])\n    const showDrawer = record => {\n        setDetail(record)\n        setShow(true)\n    }\n\n    const onClose = () => {\n        setShow(false)\n    }\n    const confirmDelete = async tid => {\n        message.loading({ content: '删除中', key: 'Delete' })\n        try {\n            const res = await DeleteTopic({ tid })\n            if (res.code === 0) {\n                await getTopicList()\n                message.success({ content: '删除成功', key: 'Delete' })\n            } else {\n                message.error({ content: res.msg || '删除失败', key: 'Delete' })\n            }\n        } catch (e) {\n            message.error({ content: '删除失败', key: 'Delete' })\n        }\n    }\n\n    const getTopicList = async () => {\n        try {\n            const res = await GetTopic()\n            if (res.code === 0) {\n                setTopiclist(res.data.topiclist)\n                setLoading(false)\n            } else {\n                message.error('获取数据失败')\n            }\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const columns = [\n        {\n            title: '课题名称',\n            dataIndex: 'topic',\n            key: 'topic',\n            render: (text, record) => <a onClick={() => showDrawer(record)}>{text}</a>\n        },\n        {\n            title: '课程名称',\n            dataIndex: 'course',\n            key: 'course'\n        },\n        {\n            title: '专业方向',\n            dataIndex: 'direction',\n            key: 'direction',\n            render: tags => (\n                <>\n                    {tags.map(tag => {\n                        return <Tag key={tag}>{tag}</Tag>\n                    })}\n                </>\n            )\n        },\n        {\n            title: '选课年级',\n            dataIndex: 'grade',\n            key: 'grade',\n            render: tags => (\n                <>\n                    {tags.map(tag => {\n                        return <Tag key={tag}>{tag}</Tag>\n                    })}\n                </>\n            )\n        },\n        {\n            title: '指导教师',\n            dataIndex: 'name',\n            key: 'name'\n        },\n        {\n            title: '手机号',\n            dataIndex: 'tel',\n            key: 'tel'\n        },\n        {\n            title: '课题状态',\n            dataIndex: 'status',\n            key: 'status',\n            render: (text, record) => (\n                <Tag color={record.status ? 'green' : 'warning'}>\n                    {record.status ? '已完成' : '未完成'}\n                </Tag>\n            )\n        },\n        {\n            title: '操作',\n            key: 'action',\n            align: 'center',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    <Popconfirm\n                        title=\"确认删除?\"\n                        onConfirm={() => confirmDelete(record.tid)}\n                        okText=\"确认\"\n                        cancelText=\"取消\"\n                    >\n                        <Button danger type=\"text\">\n                            删除\n                        </Button>\n                    </Popconfirm>\n                </Space>\n            )\n        }\n    ]\n\n    return (\n        <div className=\"content-wrapper\">\n            <div className=\"content-header\">\n                <span className=\"content-title\">课题列表</span>\n                <Button\n                    type=\"primary\"\n                    icon={<PlusOutlined />}\n                    onClick={() => history.push('/home/release')}\n                >\n                    课题发布\n                </Button>\n            </div>\n            <Table columns={columns} dataSource={topiclist} loading={loading} />\n            <Drawer\n                width={360}\n                placement=\"right\"\n                closable={false}\n                onClose={onClose}\n                visible={drawerShow}\n            >\n                <Descriptions title=\"课题信息\" column={1}>\n                    <Descriptions.Item label=\"课题名称\">{detail.topic}</Descriptions.Item>\n                    <Descriptions.Item label=\"专业方向\">\n                        {detail.direction?.map(tag => {\n                            return <Tag key={tag}>{tag}</Tag>\n                        })}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"课程名称\">{detail.course}</Descriptions.Item>\n                    <Descriptions.Item label=\"选课年级\">\n                        {detail.grade?.map(tag => {\n                            return <Tag key={tag}>{tag}</Tag>\n                        })}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"课题状态\">\n                        {\n                            <Tag color={detail.status ? 'green' : 'red'}>\n                                {detail.status ? '已完成' : '未完成'}\n                            </Tag>\n                        }\n                    </Descriptions.Item>\n                </Descriptions>\n                <Descriptions column={1}>\n                    <Descriptions.Item label=\"主要任务\">{detail.mession}</Descriptions.Item>\n                </Descriptions>\n                <Divider />\n                <Descriptions title=\"教师信息\" column={1}>\n                    <Descriptions.Item label=\"姓名\">{detail.name}</Descriptions.Item>\n                    <Descriptions.Item label=\"手机号\">{detail.tel}</Descriptions.Item>\n                    <Descriptions.Item label=\"邮箱\">{detail.mail}</Descriptions.Item>\n                </Descriptions>\n                <Divider />\n            </Drawer>\n        </div>\n    )\n}\n\nexport default Overview\n",["124","125"],"/Users/xlt/txl/c-design/src/pages/home/welcome/index.jsx",["126"],"import React, { useState, useEffect, useContext } from 'react'\nimport {\n    Table,\n    Tag,\n    Space,\n    Button,\n    message,\n    Popconfirm,\n    Drawer,\n    Divider,\n    Descriptions,\n    InputNumber,\n    Modal,\n    Form,\n    Spin\n} from 'antd'\nimport './index.scss'\nimport ShowStatus from '../../../components/ShowStatus'\nimport { GetMyTopic, GetMember, SubmitScore } from '../../../apis/home'\nimport { DeleteTopic } from '../../../apis/overview'\nimport { UserContext } from '../../../index'\nconst Home = props => {\n    const [drawerShow, setShow] = useState(false)\n    const [detail, setDetail] = useState({})\n    const [isModalVisible, setIsModalVisible] = useState(false)\n    const [form] = Form.useForm()\n    const [topiclist, setTopiclist] = useState({})\n    const [memberlist, setMemberlist] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [memberLoading, setMemberloading] = useState(true)\n    const user = useContext(UserContext)\n\n    const layout = {\n        labelCol: { span: 4 },\n        wrapperCol: { span: 16 }\n    }\n    const getTopicList = async uid => {\n        try {\n            const res = await GetMyTopic({ uid })\n            if (res.code === 0) {\n                setTopiclist(res.data)\n                setLoading(false)\n            } else {\n                message.error('获取数据失败')\n            }\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    useEffect(() => {\n        getTopicList(user.userState.uid || 0)\n    }, [user.userState.uid])\n\n    const showDrawer = record => {\n        setDetail(record)\n        setShow(true)\n        getMemberList(record.tid)\n    }\n\n    const getMemberList = async tid => {\n        try {\n            const res = await GetMember({ tid })\n            if (res.code === 0) {\n                setMemberlist(res.data.stulist)\n                setMemberloading(false)\n            } else {\n                message.error('获取学生数据失败')\n            }\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const onClose = async () => {\n        setShow(false)\n        await getTopicList(user.userState.uid)\n    }\n    const confirmDelete = async tid => {\n        message.loading({ content: '删除中', key: 'Delete' })\n        try {\n            const res = await DeleteTopic({ tid })\n            if (res.code === 0) {\n                await getTopicList(user.userState.uid)\n                message.success({ content: '删除成功', key: 'Delete' })\n            } else {\n                message.error({ content: res.msg || '删除失败', key: 'Delete' })\n            }\n        } catch (e) {\n            message.error({ content: '删除失败', key: 'Delete' })\n        }\n    }\n\n    const showModal = async record => {\n        const { name, stuId, score } = record\n        const student = [{ name, stuId, score }]\n\n        student.push(\n            ...record.children?.map(item => {\n                const { name, stuId, score } = item\n                return { name, stuId, score }\n            })\n        )\n\n        form.setFieldsValue({ student })\n        setIsModalVisible(true)\n    }\n    const handleCancel = () => {\n        setIsModalVisible(false)\n    }\n\n    const handleOk = async () => {\n        try {\n            const values = await form.validateFields()\n            message.loading({ content: '保存中', key: 'Ok' })\n            const res = await SubmitScore(values)\n            if (res.code === 0) {\n                await getMemberList()\n                message.success({ content: '保存成功', key: 'Ok' })\n                setIsModalVisible(false)\n            } else {\n                message.error({ content: res.msg || '保存失败', key: 'Ok' })\n            }\n        } catch (e) {\n            message.error({ content: '保存失败', key: 'Ok' })\n        }\n    }\n\n    const columns = [\n        {\n            title: '课题名称',\n            dataIndex: 'topic',\n            key: 'topic',\n            render: (text, record) => <a onClick={() => showDrawer(record)}>{text}</a>\n        },\n        {\n            title: '课程名称',\n            dataIndex: 'course',\n            key: 'course'\n        },\n\n        {\n            title: '专业方向',\n            dataIndex: 'direction',\n            key: 'direction',\n            render: tags => (\n                <>\n                    {tags.map(tag => {\n                        return <Tag key={tag}>{tag}</Tag>\n                    })}\n                </>\n            )\n        },\n        {\n            title: '选课年级',\n            dataIndex: 'grade',\n            key: 'grade',\n            render: tags => (\n                <>\n                    {tags.map(tag => {\n                        return <Tag key={tag}>{tag}</Tag>\n                    })}\n                </>\n            )\n        },\n        {\n            title: '课题状态',\n            dataIndex: 'status',\n            key: 'status',\n            render: (text, record) => (\n                <Tag color={record.status ? 'green' : 'warning'}>\n                    {record.status ? '已完成' : '未完成'}\n                </Tag>\n            )\n        },\n        {\n            title: '操作',\n            key: 'action',\n            align: 'center',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    <Popconfirm\n                        title=\"确认删除?\"\n                        onConfirm={() => confirmDelete(record.tid)}\n                        okText=\"确认\"\n                        cancelText=\"取消\"\n                    >\n                        <Button danger type=\"text\">\n                            删除\n                        </Button>\n                    </Popconfirm>\n                </Space>\n            )\n        }\n    ]\n\n    const groupColumns = [\n        {\n            title: '姓名',\n            dataIndex: 'name',\n            key: 'name'\n        },\n        {\n            title: '学号',\n            dataIndex: 'stuId',\n            key: 'stuId'\n        },\n        {\n            title: '专业方向',\n            dataIndex: 'direction',\n            key: 'direction'\n        },\n        {\n            title: '材料状态',\n            dataIndex: 'status',\n            key: 'status',\n            render: (text, record) =>\n                record.url ? (\n                    <a href={record.url}>下载材料</a>\n                ) : (\n                    'url' in record && <Tag color=\"warning\">未提交</Tag>\n                )\n        },\n        {\n            title: '分数',\n            dataIndex: 'score',\n            key: 'score',\n            align: 'center'\n        },\n        {\n            title: '操作',\n            key: 'action',\n            align: 'center',\n            render: (text, record) =>\n                record.children ? (\n                    <Space size=\"middle\">\n                        <Button type=\"primary\" ghost onClick={() => showModal(record)}>\n                            打分\n                        </Button>\n                    </Space>\n                ) : (\n                    ''\n                )\n        }\n    ]\n\n    return (\n        <>\n            <Spin spinning={loading}>\n                <ShowStatus status={{ done: topiclist.done, todo: topiclist.todo }} />\n                <div className=\"content-wrapper\" style={{ margin: '18px 24px' }}>\n                    <Table columns={columns} dataSource={topiclist.topiclist} />\n                    <Drawer\n                        width={960}\n                        placement=\"right\"\n                        closable={false}\n                        onClose={onClose}\n                        visible={drawerShow}\n                    >\n                        <Descriptions title=\"课题信息\" column={3}>\n                            <Descriptions.Item label=\"课题名称\">{detail.topic}</Descriptions.Item>\n                            <Descriptions.Item label=\"专业方向\">\n                                {detail.direction?.map(tag => {\n                                    return <Tag key={tag}>{tag}</Tag>\n                                })}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"课程名称\">{detail.course}</Descriptions.Item>\n                            <Descriptions.Item label=\"选课年级\">\n                                {detail.grade?.map(tag => {\n                                    return <Tag key={tag}>{tag}</Tag>\n                                })}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"课题状态\">\n                                {\n                                    <Tag color={detail.status ? 'green' : 'warning'}>\n                                        {detail.status ? '已完成' : '未完成'}\n                                    </Tag>\n                                }\n                            </Descriptions.Item>\n                        </Descriptions>\n\n                        <Descriptions column={1}>\n                            <Descriptions.Item label=\"主要任务\">{detail.mession}</Descriptions.Item>\n                        </Descriptions>\n                        <Divider />\n                        <Table\n                            columns={groupColumns}\n                            dataSource={memberlist}\n                            loading={memberLoading}\n                        />\n                    </Drawer>\n                    <Modal\n                        title=\"小组打分\"\n                        visible={isModalVisible}\n                        onOk={handleOk}\n                        onCancel={handleCancel}\n                        centered\n                        okText=\"确认\"\n                        cancelText=\"取消\"\n                        destroyOnClose\n                    >\n                        <Form form={form} preserve={false} requiredMark={false} {...layout}>\n                            <Form.List name=\"student\">\n                                {fields => (\n                                    <>\n                                        {fields.map(field => (\n                                            <Form.Item\n                                                {...field}\n                                                name={[field.name, 'score']}\n                                                rules={[\n                                                    {\n                                                        required: true,\n                                                        message: '请输入分数'\n                                                    }\n                                                ]}\n                                                label={\n                                                    form.getFieldValue('student')[field.name].name\n                                                }\n                                            >\n                                                <InputNumber placeholder=\"分数\" />\n                                            </Form.Item>\n                                        ))}\n                                    </>\n                                )}\n                            </Form.List>\n                        </Form>\n                    </Modal>\n                </div>\n            </Spin>\n        </>\n    )\n}\n\nexport default Home\n",["127","128"],"/Users/xlt/txl/c-design/src/routes/index.jsx",[],"/Users/xlt/txl/c-design/src/index.js",[],"/Users/xlt/txl/c-design/src/pages/login/index.jsx",[],"/Users/xlt/txl/c-design/src/components/footer/index.jsx",[],"/Users/xlt/txl/c-design/src/components/ShowStatus/index.jsx",[],"/Users/xlt/txl/c-design/src/mock/login.js",[],"/Users/xlt/txl/c-design/src/mock/release.js",[],"/Users/xlt/txl/c-design/src/mock/mock.js",[],"/Users/xlt/txl/c-design/src/mock/usermanage.js",[],"/Users/xlt/txl/c-design/src/apis/usermanage.js",[],"/Users/xlt/txl/c-design/src/mock/overview.js",[],"/Users/xlt/txl/c-design/src/components/LoginForm/index.jsx",[],"/Users/xlt/txl/c-design/src/mock/index.js",[],["129","130"],"/Users/xlt/txl/c-design/src/apis/overview.js",[],"/Users/xlt/txl/c-design/src/mock/home.js",[],"/Users/xlt/txl/c-design/src/apis/home.js",[],"/Users/xlt/txl/c-design/src/apis/login.js",[],["131","132"],"/Users/xlt/txl/c-design/src/apis/release.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":95,"column":35,"nodeType":"139","messageId":"140","endLine":95,"endColumn":49},{"ruleId":"133","replacedBy":"141"},{"ruleId":"135","replacedBy":"142"},{"ruleId":"137","severity":1,"message":"138","line":160,"column":35,"nodeType":"139","messageId":"140","endLine":160,"endColumn":49},{"ruleId":"143","severity":1,"message":"144","line":195,"column":58,"nodeType":"139","messageId":"145","endLine":195,"endColumn":59,"suggestions":"146"},{"ruleId":"143","severity":1,"message":"147","line":195,"column":63,"nodeType":"139","messageId":"145","endLine":195,"endColumn":64,"suggestions":"148"},{"ruleId":"143","severity":1,"message":"144","line":195,"column":79,"nodeType":"139","messageId":"145","endLine":195,"endColumn":80,"suggestions":"149"},{"ruleId":"133","replacedBy":"150"},{"ruleId":"135","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":58,"column":39,"nodeType":"154","endLine":58,"endColumn":77},{"ruleId":"133","replacedBy":"155"},{"ruleId":"135","replacedBy":"156"},{"ruleId":"152","severity":1,"message":"153","line":133,"column":39,"nodeType":"154","endLine":133,"endColumn":77},{"ruleId":"133","replacedBy":"157"},{"ruleId":"135","replacedBy":"158"},{"ruleId":"133","replacedBy":"159"},{"ruleId":"135","replacedBy":"160"},{"ruleId":"133","replacedBy":"161"},{"ruleId":"135","replacedBy":"162"},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression",["163"],["164"],"no-useless-escape","Unnecessary escape character: \\..","unnecessaryEscape",["165","166"],"Unnecessary escape character: \\@.",["167","168"],["169","170"],["163"],["164"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["163"],["164"],["163"],["164"],["163"],["164"],["163"],["164"],"no-global-assign","no-unsafe-negation",{"messageId":"171","fix":"172","desc":"173"},{"messageId":"174","fix":"175","desc":"176"},{"messageId":"171","fix":"177","desc":"173"},{"messageId":"174","fix":"178","desc":"176"},{"messageId":"171","fix":"179","desc":"173"},{"messageId":"174","fix":"180","desc":"176"},"removeEscape",{"range":"181","text":"182"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"183","text":"184"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"185","text":"182"},{"range":"186","text":"184"},{"range":"187","text":"182"},{"range":"188","text":"184"},[6073,6074],"",[6073,6073],"\\",[6078,6079],[6078,6078],[6094,6095],[6094,6094]]